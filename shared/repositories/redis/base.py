from typing import Protocol


class RedisProtocol(Protocol):
    async def hget(self, name: str, key: str) -> str | None: ...

    async def hset(self, name: str, key: str, value: str) -> int: ...

    async def hdel(self, name: str, key: str) -> int: ...

    async def zadd(self, name: str, mapping: dict[str, float]) -> int: ...

    async def zrem(self, name: str, *values: str) -> int: ...


class RedisKVProtocol(Protocol):
    async def setex(self, name: str, time: int, value: str) -> bool: ...

    async def get(self, name: str) -> str | None: ...

    async def delete(self, name: str) -> int: ...
